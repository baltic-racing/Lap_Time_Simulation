%% simulationManager.m
% Handles the setup of the simulation and decides if parfor should be used.
%
% By Eric Dornieden, Baltic Racing
% Copyright (C) 2021, Baltic Racing, all rights reserved.

% brakeSystemVersion, DebugMessages, startingSpeed, numOfLaps, LogCellData
% startingParameters

function simulationManager(startingParameters)

    numSteps = startingParameters.numSteps;                                 % Number of simulation steps (sensitivity analysis steps)
    sensitivityID = startingParameters.sensitivityID;                       % save sensitivityIDs to extra variable
    
    try
        sensitivityID2 = startingParameters.sensitivityID2;
    catch
        sensitivityID2 = 0;
    end
    
    if numSteps > 1 && sensitivityID ~= "0"                                   % Use parfor for sensitivity analysis

        startingParameters.textAreaHandle = 0;
        startingParameters.processDataButtonHandle = 0;
        
        startingParameters.numSteps = 1;                                    % Set numOfSteps to 1 use parfor instead of intern simulation logic
        
        minValue = zeros(1,numSteps);                                       % preallocate arrays for extra speed
        minValue2 = zeros(1,numSteps);
        
        steps = 1;
        
        if sensitivityID2 ~= 0 
            tic
            for steps1 = 1:numSteps                                         % Calculate Values for sensitivity analysis (multiple variables)
  
                for steps2 = 1:numSteps
                    minValue(steps) = startingParameters.minValue + startingParameters.stepSize*(steps1-1);
                    minValue2(steps) = startingParameters.minValue2 + startingParameters.stepSize2*(steps2-1);
                    steps = steps+1;
                end
            end
        else
            tic  
            
            for i = 1:numSteps                                              % Calculate Values for sensitivity analysis (single variable)
                minValue(i) = startingParameters.minValue + startingParameters.stepSize*(i-1);
                steps = numSteps;
            end
        end
        
        if sensitivityID2 ~= 0                                              % Change step size for one or two used variables (-1 when two variables are used)
            steps = steps -1;
        end
        
        writeToLogfile('parfor loop started');
        parfor i = 1:steps
            result(i) = Vehiclesim_Endurance_GUI_Version(startingParameters, minValue(i), minValue2(i), sensitivityID, sensitivityID2);
        end
        
        writeToLogfile(['parfor loop finished time: ' num2str(toc) ' s']);
        
        [~, name, ~] = fileparts(startingParameters.carDatafile);
        
        % Saves the results to a .mat file in the same location as the
        % setup file. The name is generated by adding _result to the name.
        savefilename = name + "_result.mat";

        save(startingParameters.path+"/"+savefilename,'result','-v7.3');
        
        writeToLogfile('File succesfully written', startingParameters.Debug, startingParameters.textAreaHandle);
    else
        Vehiclesim_Endurance_GUI_Version(startingParameters);
    end
 
end